{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000';\nconst api = {\n  // File Upload\n  uploadFile: async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await axios.post(`${API_BASE_URL}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Query Processing\n  processQuery: async query => {\n    const response = await axios.post(`${API_BASE_URL}/query`, query);\n    return response.data;\n  },\n  // Health Check\n  checkHealth: async () => {\n    const response = await axios.get(`${API_BASE_URL}/health`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","uploadFile","file","formData","FormData","append","response","post","headers","data","processQuery","query","checkHealth","get"],"sources":["/Volumes/workspace/Field of work/APARAVI2/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nexport interface QueryRequest {\n  text: string;\n  type: 'factual' | 'summarization' | 'semantic_linkage' | 'reasoning';\n  filters?: Record<string, any>;\n  modalities?: string[];\n}\n\nexport interface QueryResponse {\n  answer: string;\n  confidence: number;\n  sources: Array<{\n    title: string;\n    type: string;\n    relevance: number;\n    content?: string;\n  }>;\n  cross_references: Array<{\n    text: string;\n    source: string;\n    confidence: number;\n  }>;\n  evaluation: {\n    relevancy: number;\n    coherence: number;\n    factual_accuracy: number;\n  };\n}\n\nconst api = {\n  // File Upload\n  uploadFile: async (file: File) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await axios.post(`${API_BASE_URL}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Query Processing\n  processQuery: async (query: QueryRequest): Promise<QueryResponse> => {\n    const response = await axios.post(`${API_BASE_URL}/query`, query);\n    return response.data;\n  },\n\n  // Health Check\n  checkHealth: async () => {\n    const response = await axios.get(`${API_BASE_URL}/health`);\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AA8B5C,MAAMC,GAAG,GAAG;EACV;EACAC,UAAU,EAAE,MAAOC,IAAU,IAAK;IAChC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,SAAS,EAAEI,QAAQ,EAAE;MACpEK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAC,YAAY,EAAE,MAAOC,KAAmB,IAA6B;IACnE,MAAML,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,QAAQ,EAAEY,KAAK,CAAC;IACjE,OAAOL,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAG,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACe,GAAG,CAAC,GAAGd,YAAY,SAAS,CAAC;IAC1D,OAAOO,QAAQ,CAACG,IAAI;EACtB;AACF,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}