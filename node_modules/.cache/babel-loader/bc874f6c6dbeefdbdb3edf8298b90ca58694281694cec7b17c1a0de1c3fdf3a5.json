{"ast":null,"code":"var _jsxFileName = \"/Volumes/workspace/Field of work/APARAVI2/src/pages/Upload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Box, Paper, Typography, Button, List, ListItem, ListItemText, ListItemIcon, CircularProgress } from '@mui/material';\nimport { CloudUpload as CloudUploadIcon, InsertDriveFile as FileIcon, Check as CheckIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    const newFiles = acceptedFiles.map(file => ({\n      file,\n      status: 'pending'\n    }));\n    setFiles(prev => [...prev, ...newFiles]);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg', '.gif'],\n      'video/*': ['.mp4', '.avi', '.mov'],\n      'audio/*': ['.mp3', '.wav', '.ogg'],\n      'application/pdf': ['.pdf'],\n      'text/plain': ['.txt']\n    }\n  });\n  const handleUpload = async () => {\n    // TODO: Implement file upload logic\n    for (const file of files) {\n      if (file.status === 'pending') {\n        try {\n          // Update status to uploading\n          setFiles(prev => prev.map(f => f === file ? {\n            ...f,\n            status: 'uploading'\n          } : f));\n\n          // Simulate upload delay\n          await new Promise(resolve => setTimeout(resolve, 1500));\n\n          // Update status to success\n          setFiles(prev => prev.map(f => f === file ? {\n            ...f,\n            status: 'success'\n          } : f));\n        } catch (error) {\n          // Update status to error\n          setFiles(prev => prev.map(f => f === file ? {\n            ...f,\n            status: 'error'\n          } : f));\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 800,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      ...getRootProps(),\n      sx: {\n        p: 4,\n        textAlign: 'center',\n        cursor: 'pointer',\n        bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n        border: '2px dashed',\n        borderColor: isDragActive ? 'primary.main' : 'divider'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n        sx: {\n          fontSize: 48,\n          color: 'primary.main',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Drag and drop files here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        children: \"or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mt: 3,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: file.status === 'success' ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this) : file.status === 'uploading' ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(FileIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: file.file.name,\n            secondary: `${(file.file.size / 1024 / 1024).toFixed(2)} MB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2,\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleUpload,\n          disabled: files.every(f => f.status === 'success'),\n          children: \"Upload Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"tNMq6o4oWzxfTA/M2osgRdnGvTQ=\", false, function () {\n  return [useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","Box","Paper","Typography","Button","List","ListItem","ListItemText","ListItemIcon","CircularProgress","CloudUpload","CloudUploadIcon","InsertDriveFile","FileIcon","Check","CheckIcon","jsxDEV","_jsxDEV","Upload","_s","files","setFiles","onDrop","acceptedFiles","newFiles","map","file","status","prev","getRootProps","getInputProps","isDragActive","accept","handleUpload","f","Promise","resolve","setTimeout","error","sx","maxWidth","mx","mt","children","p","textAlign","cursor","bgcolor","border","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","mb","variant","gutterBottom","length","index","size","primary","name","secondary","toFixed","onClick","disabled","every","_c","$RefreshReg$"],"sources":["/Volumes/workspace/Field of work/APARAVI2/src/pages/Upload.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  CircularProgress,\n} from '@mui/material';\nimport {\n  CloudUpload as CloudUploadIcon,\n  InsertDriveFile as FileIcon,\n  Check as CheckIcon,\n} from '@mui/icons-material';\n\ninterface UploadedFile {\n  file: File;\n  status: 'pending' | 'uploading' | 'success' | 'error';\n  progress?: number;\n}\n\nconst Upload: React.FC = () => {\n  const [files, setFiles] = useState<UploadedFile[]>([]);\n\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    const newFiles = acceptedFiles.map((file) => ({\n      file,\n      status: 'pending' as const,\n    }));\n    setFiles((prev) => [...prev, ...newFiles]);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg', '.gif'],\n      'video/*': ['.mp4', '.avi', '.mov'],\n      'audio/*': ['.mp3', '.wav', '.ogg'],\n      'application/pdf': ['.pdf'],\n      'text/plain': ['.txt'],\n    },\n  });\n\n  const handleUpload = async () => {\n    // TODO: Implement file upload logic\n    for (const file of files) {\n      if (file.status === 'pending') {\n        try {\n          // Update status to uploading\n          setFiles((prev) =>\n            prev.map((f) =>\n              f === file ? { ...f, status: 'uploading' } : f\n            )\n          );\n\n          // Simulate upload delay\n          await new Promise((resolve) => setTimeout(resolve, 1500));\n\n          // Update status to success\n          setFiles((prev) =>\n            prev.map((f) =>\n              f === file ? { ...f, status: 'success' } : f\n            )\n          );\n        } catch (error) {\n          // Update status to error\n          setFiles((prev) =>\n            prev.map((f) =>\n              f === file ? { ...f, status: 'error' } : f\n            )\n          );\n        }\n      }\n    }\n  };\n\n  return (\n    <Box sx={{ maxWidth: 800, mx: 'auto', mt: 4 }}>\n      <Paper\n        {...getRootProps()}\n        sx={{\n          p: 4,\n          textAlign: 'center',\n          cursor: 'pointer',\n          bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n          border: '2px dashed',\n          borderColor: isDragActive ? 'primary.main' : 'divider',\n        }}\n      >\n        <input {...getInputProps()} />\n        <CloudUploadIcon sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\n        <Typography variant=\"h6\" gutterBottom>\n          Drag and drop files here\n        </Typography>\n        <Typography color=\"textSecondary\">\n          or click to select files\n        </Typography>\n      </Paper>\n\n      {files.length > 0 && (\n        <Paper sx={{ mt: 3, p: 2 }}>\n          <List>\n            {files.map((file, index) => (\n              <ListItem key={index}>\n                <ListItemIcon>\n                  {file.status === 'success' ? (\n                    <CheckIcon color=\"success\" />\n                  ) : file.status === 'uploading' ? (\n                    <CircularProgress size={24} />\n                  ) : (\n                    <FileIcon />\n                  )}\n                </ListItemIcon>\n                <ListItemText\n                  primary={file.file.name}\n                  secondary={`${(file.file.size / 1024 / 1024).toFixed(2)} MB`}\n                />\n              </ListItem>\n            ))}\n          </List>\n          <Box sx={{ mt: 2, textAlign: 'right' }}>\n            <Button\n              variant=\"contained\"\n              onClick={handleUpload}\n              disabled={files.every((f) => f.status === 'success')}\n            >\n              Upload Files\n            </Button>\n          </Box>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default Upload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}