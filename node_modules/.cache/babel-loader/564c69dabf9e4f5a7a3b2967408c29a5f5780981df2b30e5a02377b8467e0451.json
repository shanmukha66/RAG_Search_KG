{"ast":null,"code":"var _jsxFileName = \"/Volumes/workspace/Field of work/APARAVI2/src/pages/Search.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, FormControl, InputLabel, Select, MenuItem, Paper, Typography } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryTypes = [{\n  value: 'factual',\n  label: 'Factual'\n}, {\n  value: 'summarization',\n  label: 'Summarization'\n}, {\n  value: 'semantic_linkage',\n  label: 'Semantic Linkage'\n}, {\n  value: 'reasoning',\n  label: 'Reasoning'\n}];\nconst Search = () => {\n  _s();\n  const navigate = useNavigate();\n  const [query, setQuery] = useState('');\n  const [queryType, setQueryType] = useState('factual');\n  const handleSearch = async () => {\n    // TODO: Implement search logic\n    navigate('/results', {\n      state: {\n        query,\n        queryType\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: Paper,\n    sx: {\n      p: 4,\n      maxWidth: 800,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Enter your query\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        multiline: true,\n        rows: 3,\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Query Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: queryType,\n          label: \"Query Type\",\n          onChange: e => setQueryType(e.target.value),\n          children: queryTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: type.value,\n            children: type.label\n          }, type.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 22\n        }, this),\n        onClick: handleSearch,\n        disabled: !query.trim(),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"nMOMUwQdcpL02oFJrYQW/yDI9sQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","FormControl","InputLabel","Select","MenuItem","Paper","Typography","SearchIcon","useNavigate","jsxDEV","_jsxDEV","queryTypes","value","label","Search","_s","navigate","query","setQuery","queryType","setQueryType","handleSearch","state","component","sx","p","maxWidth","mx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","fullWidth","onChange","e","target","multiline","rows","map","type","startIcon","onClick","disabled","trim","_c","$RefreshReg$"],"sources":["/Volumes/workspace/Field of work/APARAVI2/src/pages/Search.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Paper,\n  Typography,\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useNavigate } from 'react-router-dom';\n\nconst queryTypes = [\n  { value: 'factual', label: 'Factual' },\n  { value: 'summarization', label: 'Summarization' },\n  { value: 'semantic_linkage', label: 'Semantic Linkage' },\n  { value: 'reasoning', label: 'Reasoning' },\n];\n\nconst Search: React.FC = () => {\n  const navigate = useNavigate();\n  const [query, setQuery] = useState('');\n  const [queryType, setQueryType] = useState('factual');\n\n  const handleSearch = async () => {\n    // TODO: Implement search logic\n    navigate('/results', { \n      state: { \n        query,\n        queryType \n      } \n    });\n  };\n\n  return (\n    <Box\n      component={Paper}\n      sx={{\n        p: 4,\n        maxWidth: 800,\n        mx: 'auto',\n        mt: 4,\n      }}\n    >\n      <Typography variant=\"h4\" gutterBottom>\n        Search\n      </Typography>\n      <Box sx={{ mb: 3 }}>\n        <TextField\n          fullWidth\n          label=\"Enter your query\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          multiline\n          rows={3}\n          sx={{ mb: 2 }}\n        />\n        <FormControl fullWidth sx={{ mb: 2 }}>\n          <InputLabel>Query Type</InputLabel>\n          <Select\n            value={queryType}\n            label=\"Query Type\"\n            onChange={(e) => setQueryType(e.target.value)}\n          >\n            {queryTypes.map((type) => (\n              <MenuItem key={type.value} value={type.value}>\n                {type.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          startIcon={<SearchIcon />}\n          onClick={handleSearch}\n          disabled={!query.trim()}\n        >\n          Search\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Search; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}