{"ast":null,"code":"var _jsxFileName = \"/Volumes/workspace/Field of work/APARAVI2/ui/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Paper, TextField, Button, Typography, CircularProgress, Card, CardContent, Stack } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searching, setSearching] = useState(false);\n  const [results, setResults] = useState([]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    setSearching(true);\n    try {\n      // TODO: Implement actual search logic here\n      // This is where you'll integrate with your Python backend\n      console.log('Searching for:', query);\n\n      // Simulate search delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock results\n      setResults([{\n        id: 1,\n        type: 'text',\n        title: 'Sample Document',\n        content: 'This is a sample search result...',\n        confidence: 0.95\n      }\n      // Add more mock results as needed\n      ]);\n    } catch (error) {\n      console.error('Search error:', error);\n    } finally {\n      setSearching(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 800,\n      mx: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Search Query\",\n            variant: \"outlined\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            disabled: searching\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            disabled: searching || !query.trim(),\n            startIcon: searching ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 38\n            }, this) : /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 71\n            }, this),\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: results.map(result => /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: result.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Type: \", result.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mt: 1\n                },\n                children: result.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1\n                },\n                children: [\"Confidence: \", (result.confidence * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)\n          }, result.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"wOaydk3jbO5giC7564clnvv//xw=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Box","Paper","TextField","Button","Typography","CircularProgress","Card","CardContent","Stack","SearchIcon","jsxDEV","_jsxDEV","Search","_s","query","setQuery","searching","setSearching","results","setResults","handleSearch","e","preventDefault","trim","console","log","Promise","resolve","setTimeout","id","type","title","content","confidence","error","sx","maxWidth","mx","children","p","onSubmit","direction","spacing","fullWidth","label","variant","value","onChange","target","disabled","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","size","length","mt","gutterBottom","map","result","color","toFixed","_c","$RefreshReg$"],"sources":["/Volumes/workspace/Field of work/APARAVI2/ui/src/pages/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  CircularProgress,\n  Card,\n  CardContent,\n  Stack,\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\n\nfunction Search() {\n  const [query, setQuery] = useState('');\n  const [searching, setSearching] = useState(false);\n  const [results, setResults] = useState([]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!query.trim()) return;\n\n    setSearching(true);\n    try {\n      // TODO: Implement actual search logic here\n      // This is where you'll integrate with your Python backend\n      console.log('Searching for:', query);\n      \n      // Simulate search delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Mock results\n      setResults([\n        {\n          id: 1,\n          type: 'text',\n          title: 'Sample Document',\n          content: 'This is a sample search result...',\n          confidence: 0.95,\n        },\n        // Add more mock results as needed\n      ]);\n    } catch (error) {\n      console.error('Search error:', error);\n    } finally {\n      setSearching(false);\n    }\n  };\n\n  return (\n    <Box sx={{ maxWidth: 800, mx: 'auto' }}>\n      <Paper sx={{ p: 4 }}>\n        <form onSubmit={handleSearch}>\n          <Stack direction=\"row\" spacing={2}>\n            <TextField\n              fullWidth\n              label=\"Search Query\"\n              variant=\"outlined\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              disabled={searching}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              disabled={searching || !query.trim()}\n              startIcon={searching ? <CircularProgress size={20} /> : <SearchIcon />}\n            >\n              Search\n            </Button>\n          </Stack>\n        </form>\n\n        {results.length > 0 && (\n          <Box sx={{ mt: 4 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Search Results\n            </Typography>\n            <Stack spacing={2}>\n              {results.map((result) => (\n                <Card key={result.id}>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {result.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Type: {result.type}\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ mt: 1 }}>\n                      {result.content}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                      Confidence: {(result.confidence * 100).toFixed(1)}%\n                    </Typography>\n                  </CardContent>\n                </Card>\n              ))}\n            </Stack>\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n}\n\nexport default Search; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}